<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.io7m.jtensors</groupId>
    <artifactId>com.io7m.jtensors</artifactId>
    <version>11.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>com.io7m.jtensors.core</artifactId>
  <packaging>jar</packaging>

  <name>com.io7m.jtensors.core</name>
  <description>Vector/matrix math package (Core)</description>
  <url>https://www.io7m.com/software/jtensors</url>

  <dependencies>
    <dependency>
      <groupId>com.io7m.junreachable</groupId>
      <artifactId>com.io7m.junreachable.core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.annotation.bundle</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>org.osgi</groupId>
      <artifactId>org.osgi.annotation.versioning</artifactId>
      <scope>provided</scope>
    </dependency>

    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>com.io7m.immutables.style</groupId>
      <artifactId>com.io7m.immutables.style</artifactId>
      <scope>provided</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- Generate sources -->
      <plugin>
        <groupId>com.io7m.stmp</groupId>
        <artifactId>string-template-maven-plugin</artifactId>
        <executions>

          <!-- Parameterized vector types -->
          <execution>
            <id>generate-P4D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors4D.java
                </outputFile>
                <properties>
                  <className>PVectors4D</className>
                  <vectorType>PVector4D</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorConversionType>
                  <vectorComponentType>double</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorDOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P3D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors3D.java
                </outputFile>
                <properties>
                  <className>PVectors3D</className>
                  <vectorType>PVector3D</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorConversionType>
                  <vectorComponentType>double</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorDOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P2D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors2D.java
                </outputFile>
                <properties>
                  <className>PVectors2D</className>
                  <vectorType>PVector2D</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorConversionType>
                  <vectorComponentType>double</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorDOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>

          <execution>
            <id>generate-P4F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors4F.java
                </outputFile>
                <properties>
                  <className>PVectors4F</className>
                  <vectorType>PVector4F</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorConversionType>
                  <vectorComponentType>float</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorFOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P3F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors3F.java
                </outputFile>
                <properties>
                  <className>PVectors3F</className>
                  <vectorType>PVector3F</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorConversionType>
                  <vectorComponentType>float</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorFOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P2F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors2F.java
                </outputFile>
                <properties>
                  <className>PVectors2F</className>
                  <vectorType>PVector2F</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorConversionType>
                  <vectorComponentType>float</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorFOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>

          <execution>
            <id>generate-P4L</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors4L.java
                </outputFile>
                <properties>
                  <className>PVectors4L</className>
                  <vectorType>PVector4L</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4L</vectorConversionType>
                  <vectorComponentType>long</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsLong</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorLOps</opClass>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P3L</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors3L.java
                </outputFile>
                <properties>
                  <className>PVectors3L</className>
                  <vectorType>PVector3L</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3L</vectorConversionType>
                  <vectorComponentType>long</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsLong</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorLOps</opClass>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P2L</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors2L.java
                </outputFile>
                <properties>
                  <className>PVectors2L</className>
                  <vectorType>PVector2L</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2L</vectorConversionType>
                  <vectorComponentType>long</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsLong</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorLOps</opClass>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>

          <execution>
            <id>generate-P4I</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors4I.java
                </outputFile>
                <properties>
                  <className>PVectors4I</className>
                  <vectorType>PVector4I</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4I</vectorConversionType>
                  <vectorComponentType>int</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsInt</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorIOps</opClass>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P3I</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors3I.java
                </outputFile>
                <properties>
                  <className>PVectors3I</className>
                  <vectorType>PVector3I</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3I</vectorConversionType>
                  <vectorComponentType>int</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsInt</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorIOps</opClass>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-P2I</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/vectors/PVectors2I.java
                </outputFile>
                <properties>
                  <className>PVectors2I</className>
                  <vectorType>PVector2I</vectorType>
                  <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2I</vectorConversionType>
                  <vectorComponentType>int</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsInt</dotProductClass>
                  <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectorIOps</opClass>
                  <hasGeneric>true</hasGeneric>
                </properties>
              </template>

            </configuration>
          </execution>

          <!-- Unparameterized vector types -->
          <execution>
            <id>generate-4D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors4D.java
                </outputFile>
                <properties>
                  <className>Vectors4D</className>
                  <vectorType>Vector4D</vectorType>
                  <vectorComponentType>double</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorDOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-3D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors3D.java
                </outputFile>
                <properties>
                  <className>Vectors3D</className>
                  <vectorType>Vector3D</vectorType>
                  <vectorComponentType>double</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorDOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-2D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors2D.java
                </outputFile>
                <properties>
                  <className>Vectors2D</className>
                  <vectorType>Vector2D</vectorType>
                  <vectorComponentType>double</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorDOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                </properties>
              </template>

            </configuration>
          </execution>

          <execution>
            <id>generate-4F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors4F.java
                </outputFile>
                <properties>
                  <className>Vectors4F</className>
                  <vectorType>Vector4F</vectorType>
                  <vectorComponentType>float</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorFOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-3F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors3F.java
                </outputFile>
                <properties>
                  <className>Vectors3F</className>
                  <vectorType>Vector3F</vectorType>
                  <vectorComponentType>float</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorFOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-2F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors2F.java
                </outputFile>
                <properties>
                  <className>Vectors2F</className>
                  <vectorType>Vector2F</vectorType>
                  <vectorComponentType>float</vectorComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorFOps</opClass>
                  <hasFloatingPoint>true</hasFloatingPoint>
                </properties>
              </template>

            </configuration>
          </execution>

          <execution>
            <id>generate-4L</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors4L.java
                </outputFile>
                <properties>
                  <className>Vectors4L</className>
                  <vectorType>Vector4L</vectorType>
                  <vectorComponentType>long</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsLong</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorLOps</opClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-3L</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors3L.java
                </outputFile>
                <properties>
                  <className>Vectors3L</className>
                  <vectorType>Vector3L</vectorType>
                  <vectorComponentType>long</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsLong</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorLOps</opClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-2L</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors2L.java
                </outputFile>
                <properties>
                  <className>Vectors2L</className>
                  <vectorType>Vector2L</vectorType>
                  <vectorComponentType>long</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsLong</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorLOps</opClass>
                </properties>
              </template>

            </configuration>
          </execution>

          <execution>
            <id>generate-4I</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector4.st</inputFile>
                <name>PVector4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors4I.java
                </outputFile>
                <properties>
                  <className>Vectors4I</className>
                  <vectorType>Vector4I</vectorType>
                  <vectorComponentType>int</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsInt</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorIOps</opClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-3I</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector3.st</inputFile>
                <name>PVector3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors3I.java
                </outputFile>
                <properties>
                  <className>Vectors3I</className>
                  <vectorType>Vector3I</vectorType>
                  <vectorComponentType>int</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsInt</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorIOps</opClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-2I</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PVector2.st</inputFile>
                <name>PVector2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/vectors/Vectors2I.java
                </outputFile>
                <properties>
                  <className>Vectors2I</className>
                  <vectorType>Vector2I</vectorType>
                  <vectorComponentType>int</vectorComponentType>
                  <scalarLargeType>long</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsInt</dotProductClass>
                  <opClass>com.io7m.jtensors.core.unparameterized.vectors.VectorIOps</opClass>
                </properties>
              </template>

            </configuration>
          </execution>

          <!-- Parameterized matrix types -->
          <execution>
            <id>generate-PM4x4D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix4x4.st</inputFile>
                <name>PMatrix4x4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/matrices/PMatrices4x4D.java
                </outputFile>
                <properties>
                  <className>PMatrices4x4D</className>
                  <matrixType>PMatrix4x4D</matrixType>
                  <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4D
                  </matrixConversionType>
                  <matrixComponentType>double</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector4D
                  </vectorColumnGenericType>
                  <hasGeneric>true</hasGeneric>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrixDOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-PM3x3D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix3x3.st</inputFile>
                <name>PMatrix3x3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/matrices/PMatrices3x3D.java
                </outputFile>
                <properties>
                  <className>PMatrices3x3D</className>
                  <matrixType>PMatrix3x3D</matrixType>
                  <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix3x3D
                  </matrixConversionType>
                  <matrixComponentType>double</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector3D
                  </vectorColumnGenericType>
                  <hasGeneric>true</hasGeneric>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrixDOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-PM2x2D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix2x2.st</inputFile>
                <name>PMatrix2x2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/matrices/PMatrices2x2D.java
                </outputFile>
                <properties>
                  <className>PMatrices2x2D</className>
                  <matrixType>PMatrix2x2D</matrixType>
                  <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix2x2D
                  </matrixConversionType>
                  <matrixComponentType>double</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector2D
                  </vectorColumnGenericType>
                  <hasGeneric>true</hasGeneric>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrixDOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-PM4x4F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix4x4.st</inputFile>
                <name>PMatrix4x4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/matrices/PMatrices4x4F.java
                </outputFile>
                <properties>
                  <className>PMatrices4x4F</className>
                  <matrixType>PMatrix4x4F</matrixType>
                  <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4F
                  </matrixConversionType>
                  <matrixComponentType>float</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector4F
                  </vectorColumnGenericType>
                  <hasGeneric>true</hasGeneric>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrixFOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-PM3x3F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix3x3.st</inputFile>
                <name>PMatrix3x3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/matrices/PMatrices3x3F.java
                </outputFile>
                <properties>
                  <className>PMatrices3x3F</className>
                  <matrixType>PMatrix3x3F</matrixType>
                  <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix3x3F
                  </matrixConversionType>
                  <matrixComponentType>float</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector3F
                  </vectorColumnGenericType>
                  <hasGeneric>true</hasGeneric>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrixFOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-PM2x2F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix2x2.st</inputFile>
                <name>PMatrix2x2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/parameterized/matrices/PMatrices2x2F.java
                </outputFile>
                <properties>
                  <className>PMatrices2x2F</className>
                  <matrixType>PMatrix2x2F</matrixType>
                  <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix2x2F
                  </matrixConversionType>
                  <matrixComponentType>float</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector2F
                  </vectorColumnGenericType>
                  <hasGeneric>true</hasGeneric>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrixFOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>

          <!-- Unparameterized matrix types -->
          <execution>
            <id>generate-M4x4D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix4x4.st</inputFile>
                <name>PMatrix4x4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/matrices/Matrices4x4D.java
                </outputFile>
                <properties>
                  <className>Matrices4x4D</className>
                  <matrixType>Matrix4x4D</matrixType>
                  <matrixComponentType>double</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D
                  </vectorColumnGenericType>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.unparameterized.matrices.MatrixDOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-M3x3D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix3x3.st</inputFile>
                <name>PMatrix3x3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/matrices/Matrices3x3D.java
                </outputFile>
                <properties>
                  <className>Matrices3x3D</className>
                  <matrixType>Matrix3x3D</matrixType>
                  <matrixComponentType>double</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D
                  </vectorColumnGenericType>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.unparameterized.matrices.MatrixDOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-M2x2D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix2x2.st</inputFile>
                <name>PMatrix2x2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/matrices/Matrices2x2D.java
                </outputFile>
                <properties>
                  <className>Matrices2x2D</className>
                  <matrixType>Matrix2x2D</matrixType>
                  <matrixComponentType>double</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D
                  </vectorColumnGenericType>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.unparameterized.matrices.MatrixDOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-M4x4F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix4x4.st</inputFile>
                <name>PMatrix4x4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/matrices/Matrices4x4F.java
                </outputFile>
                <properties>
                  <className>Matrices4x4F</className>
                  <matrixType>Matrix4x4F</matrixType>
                  <matrixComponentType>float</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F
                  </vectorColumnGenericType>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.unparameterized.matrices.MatrixFOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-M3x3F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix3x3.st</inputFile>
                <name>PMatrix3x3</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/matrices/Matrices3x3F.java
                </outputFile>
                <properties>
                  <className>Matrices3x3F</className>
                  <matrixType>Matrix3x3F</matrixType>
                  <matrixComponentType>float</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F
                  </vectorColumnGenericType>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.unparameterized.matrices.MatrixFOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-M2x2F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/PMatrix2x2.st</inputFile>
                <name>PMatrix2x2</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/unparameterized/matrices/Matrices2x2F.java
                </outputFile>
                <properties>
                  <className>Matrices2x2F</className>
                  <matrixType>Matrix2x2F</matrixType>
                  <matrixComponentType>float</matrixComponentType>
                  <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorRowType>
                  <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorColumnType>
                  <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F
                  </vectorColumnGenericType>
                  <scalarRealType>double</scalarRealType>
                  <opClass>com.io7m.jtensors.core.unparameterized.matrices.MatrixFOps</opClass>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>

          <!-- Quaternions -->
          <execution>
            <id>generate-Q4D</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/Quaternion4.st</inputFile>
                <name>Quaternion4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/quaternions/Quaternions4D.java
                </outputFile>
                <properties>
                  <className>Quaternions4D</className>
                  <quaternionType>Quaternion4D</quaternionType>
                  <quaternionComponentType>double</quaternionComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <matrix4x4Type>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4D</matrix4x4Type>
                  <matrix4x4ParameterizedType>com.io7m.jtensors.core.parameterized.matrices.PMatrix4x4D
                  </matrix4x4ParameterizedType>
                  <matrix4x4ComponentType>double</matrix4x4ComponentType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
          <execution>
            <id>generate-Q4F</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>renderTemplate</goal>
            </goals>
            <configuration>

              <template>
                <inputFile>src/main/string-template/Quaternion4.st</inputFile>
                <name>Quaternion4</name>
                <outputFile>
                  ${project.build.directory}/generated-sources/string-template/com/io7m/jtensors/core/quaternions/Quaternions4F.java
                </outputFile>
                <properties>
                  <className>Quaternions4F</className>
                  <quaternionType>Quaternion4F</quaternionType>
                  <quaternionComponentType>float</quaternionComponentType>
                  <scalarLargeType>double</scalarLargeType>
                  <scalarRealType>double</scalarRealType>
                  <matrix4x4Type>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4F</matrix4x4Type>
                  <matrix4x4ParameterizedType>com.io7m.jtensors.core.parameterized.matrices.PMatrix4x4F
                  </matrix4x4ParameterizedType>
                  <matrix4x4ComponentType>float</matrix4x4ComponentType>
                  <dotProductClass>com.io7m.jtensors.core.dotproducts.DotProductsDouble</dotProductClass>
                </properties>
              </template>

            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-sources</id>
            <goals>
              <goal>add-source</goal>
            </goals>
            <phase>
              generate-sources
            </phase>
            <configuration>
              <sources>
                <source>
                  ${project.build.directory}/generated-sources/string-template
                </source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
