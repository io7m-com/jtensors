<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta content="https://www.github.com/io7m/minisite; 0.0.9" name="generator"/>
        <meta content="application/xhtml+xml; charset=UTF-8" http-equiv="Content-Type"/>
        <style type="text/css">body {
  margin: 2em;
  padding: 0px;
  font-family: sans-serif;
}

div#main {
  max-width: 50em;
}

p {
  text-align: justify;
}

.changelog {
  font-family: monospace;
}
.changelog td {
  vertical-align: text-top;
  padding-right: 2em;
}
.changelog td:nth-child(1) {
  width: 10em;
}

.overview_content_area {

}

.overview_title_area {

}

.overview_title_area::after {
  content: "";
  clear: both;
  display: table;
}

.icon {
  float: left;
  margin-right: 1em;
}
</style>
        <title>com.io7m.jtensors</title>
    </head>
    <body>
        <div id="main">
            <div id="overview">
                <div class="overview_title_area">
                    <img alt="Project icon" class="icon" height="64"
                        src="icon.png" width="64"/>
                    <h1>com.io7m.jtensors</h1>
                </div>
                <div class="overview_content_area">
                    <div>
                        <p>
                            <a href="https://travis-ci.org/io7m/jtensors">
                                <img alt="Build status" src="https://img.shields.io/travis/io7m/jtensors.png?style=flat-square"/>
                            </a>
                            <a href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">
                                <img alt="Maven Central" src="https://img.shields.io/maven-central/v/com.io7m.jtensors/com.io7m.jtensors.png?style=flat-square"/>
                            </a>
                            <a href="https://www.codacy.com/app/github_79/jtensors">
                                <img alt="Codacy" src="https://img.shields.io/codacy/grade/ef32f8e67cf14526b0ec1cb994ba562d.png?style=flat-square"/>
                            </a>
                            <a href="https://codecov.io/gh/io7m/jtensors">
                                <img alt="Codecov" src="https://img.shields.io/codecov/c/github/io7m/jtensors.png?style=flat-square"/>
                            </a>
                        </p>
                        <p>
    The <var>jtensors</var> package package implements a set of vector and matrix types,
    intended for use in computer graphics software.
  </p>
                        <p>
    See <a href="http://mathfor3dgameprogramming.com">Mathematics for 3D Game
    Programming and Computer Graphics</a>.
  </p>
                    </div>
                </div>
            </div>
            <div>
                <h2>Contents</h2>
                <ul>
                    <li>
                        <a href="#features">Features</a>
                    </li>
                    <li>
                        <a href="#releases">Releases</a>
                    </li>
                    <li>
                        <a href="#documentation">Documentation</a>
                    </li>
                    <li>
                        <a href="#maven">Maven</a>
                    </li>
                    <li>
                        <a href="#changes">Changes</a>
                    </li>
                    <li>
                        <a href="#sources">Sources</a>
                    </li>
                    <li>
                        <a href="#license">License</a>
                    </li>
                    <li>
                        <a href="#bug-tracker">Bug Tracker</a>
                    </li>
                </ul>
            </div>
            <div id="features">
                <h2>Features</h2>
                <div>
                    <ul>
                        <li>2D, 3D, and 4D immutable vector types in <tt>float</tt> and <tt>double</tt> versions.</li>
                        <li>2D, 3D, and 4D immutable vector types in <tt>int</tt> and <tt>long</tt> versions.</li>
                        <li>4D immutable quaternion types in <tt>float</tt> and <tt>double</tt> versions.</li>
                        <li>2x2, 3x3, and 4x4 mutable matrix types in <tt>float</tt> and <tt>double</tt> versions.</li>
                        <li>Phantom-typed variants of all types for statically distinguishing between semantically different but otherwise type-compatible vectors and matrices.</li>
                        <li>Fully documented (Javadoc).</li>
                        <li>Massive battery of tests for checking the behaviour of matrix/vector implementations.</li>
                        <li>100% automated unit test coverage.</li>
                        <li>
                            <a href="https://www.osgi.org/">OSGi</a>-ready.</li>
                        <li>
                            <a href="https://en.wikipedia.org/wiki/Java_Platform_Module_System">JPMS</a>-ready</li>
                        <li>ISC license.</li>
                    </ul>
                </div>
            </div>
            <div id="releases">
                <h2>Releases</h2>
                <p>The current release is <tt>9.0.0</tt>.</p>
                <p>Source code and binaries are available from the <a href="https://repo1.maven.org/maven2/com/io7m/jtensors">repository</a>.</p>
            </div>
            <div id="documentation">
                <h2>Documentation</h2>
                <p>Documentation for the <tt>9.0.0</tt> release is available for reading online.</p>

                <p>Documentation for current and older releases is archived in the <a href="https://repo1.maven.org/maven2/com/io7m/jtensors">repository</a>.</p>
                <div>
                    <h3>User documentation</h3>
                    <ul>
                        <li>
                            <a href="documentation/index-m.xhtml">XHTML - one page per section</a>
                        </li>
                        <li>
                            <a href="documentation/index.xhtml">XHTML - single page</a>
                        </li>
                        <li>
                            <a href="documentation/main.txt">UTF-8 plain text</a>
                        </li>
                    </ul>
                </div>
            </div>
            <div id="maven">
                <h2>Maven</h2>
                <p>The following is a complete list of the project's modules expressed as Maven dependencies: </p>
                <pre>&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.checkstyle%22">com.io7m.jtensors.checkstyle</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.checkstyle%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.core%22">com.io7m.jtensors.core</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.core%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.documentation%22">com.io7m.jtensors.documentation</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.documentation%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.generators%22">com.io7m.jtensors.generators</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.generators%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.orthonormalization%22">com.io7m.jtensors.orthonormalization</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.orthonormalization%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.storage.api%22">com.io7m.jtensors.storage.api</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.storage.api%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.storage.bytebuffered%22">com.io7m.jtensors.storage.bytebuffered</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.storage.bytebuffered%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.storage.heap%22">com.io7m.jtensors.storage.heap</a>&lt;/artifactId&gt;
  &lt;version&gt;<a
                        href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.storage.heap%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

&lt;dependency&gt;
  &lt;groupId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Cg%3A%22com.io7m.jtensors%22">com.io7m.jtensors</a>&lt;/groupId&gt;
  &lt;artifactId&gt;<a
                        href="http://search.maven.org/#search%7Cga%7C1%7Ca%3A%22com.io7m.jtensors.tests%22">com.io7m.jtensors.tests</a>&lt;/artifactId&gt;
  &lt;version&gt;<a href="http://search.maven.org/#artifactdetails%7Ccom.io7m.jtensors%7Ccom.io7m.jtensors.tests%7C9.0.0%7Cjar">9.0.0</a>&lt;/version&gt;
&lt;/dependency&gt;

</pre>
                <p>Each release of the project is made available on <a href="http://search.maven.org">Maven Central</a> within ten minutes of the release announcement.</p>
            </div>
            <div id="changes">
                <h2>Changes</h2>
                <p>Subscribe to the releases <a href="releases.atom">atom feed</a>.</p>
                <table class="changelog" summary="Changes for project com.io7m.jtensors">
                    <tr>
                        <td>2017-11-16</td>
                        <td>Release: com.io7m.jtensors 9.0.0</td>
                    </tr>
                    <tr>
                        <td>2017-11-16</td>
                        <td>Change: (Backwards incompatible) All modules are now Java 9 modules. JDK 9 is now required.</td>
                    </tr>
                    <tr>
                        <td>2017-11-16</td>
                        <td>Change: (Backwards incompatible) Removed dependency on com.io7m.jnull.</td>
                    </tr>
                    <tr>
                        <td>2017-06-27</td>
                        <td>Release: com.io7m.jtensors 8.2.0</td>
                    </tr>
                    <tr>
                        <td>2017-06-27</td>

                        <td>Change: Add bilinear interpolation methods. (tickets: <a href="http://github.com/io7m/jtensors/issues/22">22</a>)</td>
                    </tr>
                    <tr>
                        <td>2017-05-06</td>
                        <td>Release: com.io7m.jtensors 8.1.0</td>
                    </tr>
                    <tr>
                        <td>2017-05-06</td>
                        <td>Change: Add vector distance methods.</td>
                    </tr>
                    <tr>
                        <td>2017-04-24</td>
                        <td>Release: com.io7m.jtensors 8.0.0</td>
                    </tr>
                    <tr>
                        <td>2017-03-22</td>
                        <td>Change: (Backwards incompatible) Complete rewrite. See japicmp report for changes.</td>
                    </tr>
                    <tr>
                        <td>2017-03-20</td>
                        <td>Release: com.io7m.jtensors 7.2.0</td>
                    </tr>
                    <tr>
                        <td>2017-03-20</td>
                        <td>Change: Switch to generating sources. This adds deprecations to various methods (see the japicmp report).</td>
                    </tr>
                    <tr>
                        <td>2017-03-01</td>
                        <td>Change: Use the japicmp-maven-plugin to enforce semantic versioning for future releases.</td>
                    </tr>
                    <tr>
                        <td>2017-01-30</td>
                        <td>Release: com.io7m.jtensors 7.1.0</td>
                    </tr>
                    <tr>
                        <td>2017-01-30</td>

                        <td>Change: Add spherical linear interpolation for quaternions. (tickets: <a href="http://github.com/io7m/jtensors/issues/11">11</a>)</td>
                    </tr>
                    <tr>
                        <td>2017-01-30</td>
                        <td>Release: com.io7m.jtensors 7.0.0</td>
                    </tr>
                    <tr>
                        <td>2016-11-24</td>
                        <td>Change: Add quickcheck generators.</td>
                    </tr>
                    <tr>
                        <td>2016-10-04</td>

                        <td>Change: Add functions to convert quaternions to axis/angle representations. (tickets: <a href="http://github.com/io7m/jtensors/issues/8">8</a>)</td>
                    </tr>
                    <tr>
                        <td>2016-08-04</td>
                        <td>Change: The packaged jar is now an OSGi bundle.</td>
                    </tr>
                    <tr>
                        <td>2016-08-04</td>
                        <td>Change: (Backwards incompatible) The package will no longer compile on JDK 6 due to Checkstyle, but the compiled code is still JDK 6 compatible.</td>
                    </tr>
                    <tr>
                        <td>2015-09-27</td>
                        <td>Change: Add heap-array allocated matrix types.</td>
                    </tr>
                    <tr>
                        <td>2015-09-27</td>
                        <td>Change: Add buffered vector and matrix types for addressing values that are packed inside large shared ByteBuffers.</td>
                    </tr>
                    <tr>
                        <td>2015-09-06</td>
                        <td>Change: (Backwards incompatible) Rename all Context* types to behave more pleasantly with unqualified imports.</td>
                    </tr>
                    <tr>
                        <td>2015-09-05</td>
                        <td>Change: (Backwards incompatible) All vector functions that allocated temporary objects now take re-usable preallocated Context values in the same manner as matrix functions.</td>
                    </tr>
                    <tr>
                        <td>2015-09-05</td>
                        <td>Change: (Backwards incompatible) Replace most direct uses of mutable vector types with generics and interfaces. This allows for code sharing between a selection of new vector types.</td>
                    </tr>
                    <tr>
                        <td>2014-11-29</td>
                        <td>Change: Add explicitly type-indexed vectors (PVector*).</td>
                    </tr>
                    <tr>
                        <td>2014-11-29</td>
                        <td>Change: (Backwards incompatible) Make all types final again, undoing the change made in 5.1.0 to support type indices.</td>
                    </tr>
                    <tr>
                        <td>2014-11-30</td>
                        <td>Change: (Backwards incompatible) Remove get() methods from matrix types and only allow element access via the MatrixReadable* interfaces.</td>
                    </tr>
                    <tr>
                        <td>2014-11-30</td>
                        <td>Change: Improve formatting of matrix toString() methods slightly.</td>
                    </tr>
                    <tr>
                        <td>2014-11-30</td>
                        <td>Change: Remove floatBuffer() and doubleBuffer() methods and only allow access to buffers via the new MatrixDirectBuffered* interfaces.</td>
                    </tr>
                    <tr>
                        <td>2014-12-03</td>
                        <td>Change: Correct javadoc comments to pass Java 8's new Javadoc doclint.</td>
                    </tr>
                    <tr>
                        <td>2014-12-04</td>
                        <td>Change: (Backwards incompatible) Remove Matrix*.translate* functions due to questions of correctness. Use r = Matrix*.makeTranslation* and multiply m * r instead.</td>
                    </tr>
                    <tr>
                        <td>2014-12-04</td>
                        <td>Change: (Backwards incompatible) Remove imperative Matrix*.rotate* functions to reduce the size of the API. Use r = Matrix*.makeRotation* and multiply m * r instead.</td>
                    </tr>
                    <tr>
                        <td>2015-08-29</td>
                        <td>Release: com.io7m.jtensors 6.0.2</td>
                    </tr>
                    <tr>
                        <td>2015-08-29</td>
                        <td>Change: Migrate to GitHub.</td>
                    </tr>
                    <tr>
                        <td>2015-08-29</td>
                        <td>Change: Fix JavaDoc to cope with Java 8's doclint.</td>
                    </tr>
                    <tr>
                        <td>2014-10-12</td>
                        <td>Release: com.io7m.jtensors 6.0.1</td>
                    </tr>
                    <tr>
                        <td>2014-10-12</td>
                        <td>Change: Correct dependencies: 6.0.0 was accidentally released with pre-release version dependencies (all of which are binary compatible with the current versions).</td>
                    </tr>
                    <tr>
                        <td>2014-10-11</td>
                        <td>Release: com.io7m.jtensors 6.0.0</td>
                    </tr>
                    <tr>
                        <td>2014-04-24</td>
                        <td>Change: (Backwards incompatible) Break dependency on jaux. Now depends on jnull, jfunctional, jequality, jintegers.</td>
                    </tr>
                    <tr>
                        <td>2014-04-24</td>
                        <td>Change: (Backwards incompatible) Make *Unsafe vector functions that were accidentally public, private.</td>
                    </tr>
                    <tr>
                        <td>2014-04-24</td>
                        <td>Change: Add VectorWritable* types.</td>
                    </tr>
                    <tr>
                        <td>2014-04-24</td>
                        <td>Change: (Backwards incompatible) Break package up into standard core and documentation packages.</td>
                    </tr>
                    <tr>
                        <td>2014-04-24</td>
                        <td>Change: (Backwards incompatible) Make vector fields private. Replace field access with getters and setters.</td>
                    </tr>
                    <tr>
                        <td>2014-01-04</td>
                        <td>Release: com.io7m.jtensors 5.3.1</td>
                    </tr>
                    <tr>
                        <td>2014-01-04</td>
                        <td>Change: Use jaux (3.0.0, 4.0.0] and jsr305 2.0.2.</td>
                    </tr>
                    <tr>
                        <td>2013-10-27</td>
                        <td>Release: com.io7m.jtensors 5.3.0</td>
                    </tr>
                    <tr>
                        <td>2013-10-27</td>
                        <td>Change: Add long integer vectors.</td>
                    </tr>
                    <tr>
                        <td>2013-08-17</td>
                        <td>Release: com.io7m.jtensors 5.2.1</td>
                    </tr>
                    <tr>
                        <td>2013-08-17</td>
                        <td>Change: Make the Orthonormalized structures take readable vectors.</td>
                    </tr>
                    <tr>
                        <td>2013-08-17</td>
                        <td>Release: com.io7m.jtensors 5.2.0</td>
                    </tr>
                    <tr>
                        <td>2013-08-17</td>
                        <td>Change: Add three-vector orthonormalization (OrthonormalizedI3D, OrthonormalizedI3F).</td>
                    </tr>
                    <tr>
                        <td>2013-08-17</td>
                        <td>Change: Correct the type of VectorI*.ZERO - do not use the less-specific "Readable" type.</td>
                    </tr>
                    <tr>
                        <td>2013-08-17</td>

                        <td>Change: Correct documentation for vector subtraction. (tickets: <a href="http://fossil.io7m.com/repo.cgi/io7m-jtensors/tktview?name=3b145b9693">3b145b9693</a>)</td>
                    </tr>
                    <tr>
                        <td>2013-07-11</td>
                        <td>Release: com.io7m.jtensors 5.1.0</td>
                    </tr>
                    <tr>
                        <td>2013-07-11</td>
                        <td>Change: (Backwards incompatible) All vector, matrix, and quaternion types are now non-final (however all methods are still final). This is to make it possible to make semantically distinct values type-incompatible via subclassing and/or the addition of phantom type parameters. See documentation.</td>
                    </tr>
                    <tr>
                        <td>2012-12-22</td>
                        <td>Release: com.io7m.jtensors 5.0.0</td>
                    </tr>
                    <tr>
                        <td>2012-12-22</td>
                        <td>Change: Add all missing Vector* functions - VectorM* and VectorI* now have feature parity</td>
                    </tr>
                    <tr>
                        <td>2012-12-21</td>
                        <td>Change: (Backwards incompatible) Massive overhaul of test suite</td>
                    </tr>
                    <tr>
                        <td>2012-12-18</td>
                        <td>Change: (Backwards incompatible) All approximatelyEqual* functions have been removed; use almostEqual instead as it gives far more accurate results</td>
                    </tr>
                    <tr>
                        <td>2012-12-18</td>
                        <td>Change: (Backwards incompatible) MatrixReadable* functions renamed to make the row types explicit</td>
                    </tr>
                    <tr>
                        <td>2012-12-18</td>
                        <td>Change: (Backwards incompatible) Most quaternion functions that took or returned single precision floats now take/return double precision values</td>
                    </tr>
                    <tr>
                        <td>2012-12-18</td>
                        <td>Change: (Backwards incompatible) Quaternion*.makeRotationMatrix() renamed to makeRotationMatrix4x4 and added 3x3 variant</td>
                    </tr>
                    <tr>
                        <td>2012-12-17</td>
                        <td>Change: (Backwards incompatible) All single precision matrix and vector types now use double precision calculations internally for increased accuracy. Most functions that took floats as arguments now take doubles. The vectors and matrices are still using single precision float storage, so this should not break any existing code.</td>
                    </tr>
                    <tr>
                        <td>2012-12-17</td>
                        <td>Change: Add row fetching methods to all MatrixReadable* interfaces</td>
                    </tr>
                    <tr>
                        <td>2012-12-16</td>
                        <td>Change: Vastly improve documentation. Document all notational, semantic, and storage conventions.</td>
                    </tr>
                    <tr>
                        <td>2012-12-16</td>
                        <td>Change: (Backwards incompatible) Switch to using a consistent right-handed coordinate system throughout the package. This is a non backwards-compatible change.</td>
                    </tr>
                    <tr>
                        <td>2012-12-16</td>
                        <td>Change: Add Matrix*.lookAt()</td>
                    </tr>
                    <tr>
                        <td>2012-12-15</td>
                        <td>Change: Add Matrix3x3*.rotate() and makeRotation()</td>
                    </tr>
                    <tr>
                        <td>2012-12-15</td>
                        <td>Change: Add Quaternion*.lookAt()</td>
                    </tr>
                    <tr>
                        <td>2012-12-15</td>
                        <td>Change: Add Quaternion*.makeFromMatrix()</td>
                    </tr>
                    <tr>
                        <td>2012-12-15</td>
                        <td>Change: Add Matrix*.trace()</td>
                    </tr>
                    <tr>
                        <td>2012-12-14</td>
                        <td>Change: Add Vector*.orthoNormalize()</td>
                    </tr>
                    <tr>
                        <td>2012-12-09</td>
                        <td>Change: (Backwards incompatible) Modify the type of QuaternionM4{D,F}.copy() to allow any readable quaternion, as opposed to only QuaternionM4{F,D}. This change does not affect backwards-compatibility as it is simply a generalization of the type in question and cannot break existing programs.</td>
                    </tr>
                    <tr>
                        <td>2012-11-24</td>
                        <td>Release: com.io7m.jtensors 4.1.0</td>
                    </tr>
                    <tr>
                        <td>2012-11-24</td>
                        <td>Change: Make every matrix operation rewind the buffer that backs the matrix. This was a problem revealed by the API change in 4.0.0</td>
                    </tr>
                    <tr>
                        <td>2012-11-24</td>
                        <td>Release: com.io7m.jtensors 4.0.0</td>
                    </tr>
                    <tr>
                        <td>2012-11-24</td>
                        <td>Change: Fix serious API mistake: The JRE will allocate new read-only buffers with asReadOnlyBuffer(). The floatBuffer() and doubleBuffer() methods of matrices no longer guarantee read-only semantics, as this requires expensive reallocations.</td>
                    </tr>
                    <tr>
                        <td>2012-11-10</td>
                        <td>Release: com.io7m.jtensors 3.0.0</td>
                    </tr>
                    <tr>
                        <td>2012-11-10</td>
                        <td>Change: Add Quaternion classes for 3D rotations</td>
                    </tr>
                    <tr>
                        <td>2012-11-10</td>
                        <td>Change: Remove all @Deprecated methods from 2.3.0</td>
                    </tr>
                    <tr>
                        <td>2012-11-09</td>
                        <td>Change: Large javadoc updates and increased use of JSR 305 annotations (@Nonnull)</td>
                    </tr>
                    <tr>
                        <td>2012-11-09</td>
                        <td>Change: All classes now provide a hashCode() and equals() implementation. This may break code that assumes java.lang.Object()'s hashCode() or equals() method is used, but should give more consistent behaviour with regards to the contents of vectors and matrices.</td>
                    </tr>
                    <tr>
                        <td>2012-11-09</td>
                        <td>Release: com.io7m.jtensors 2.3.0</td>
                    </tr>
                    <tr>
                        <td>2012-11-09</td>
                        <td>Change: Use io7m-jaux 2.3.0</td>
                    </tr>
                    <tr>
                        <td>2012-10-21</td>
                        <td>Change: Use JSR 305 annotations to document concurrency properties</td>
                    </tr>
                    <tr>
                        <td>2012-08-08</td>
                        <td>Change: Change method names for consistency, deprecate old names (does not break compatibility)</td>
                    </tr>
                    <tr>
                        <td>2012-08-07</td>
                        <td>Change: Add MatrixReadable* interfaces</td>
                    </tr>
                    <tr>
                        <td>2012-07-27</td>
                        <td>Change: Update saxon-plugin to 1.1.0 to correct documentation builds on Windows</td>
                    </tr>
                    <tr>
                        <td>2012-07-23</td>
                        <td>Release: com.io7m.jtensors 2.2.0</td>
                    </tr>
                    <tr>
                        <td>2012-07-23</td>
                        <td>Change: Update all POM plugins to the latest versions</td>
                    </tr>
                    <tr>
                        <td>2012-07-23</td>
                        <td>Change: Improve documentation</td>
                    </tr>
                    <tr>
                        <td>2012-07-15</td>
                        <td>Change: Add missing documentation CSS</td>
                    </tr>
                    <tr>
                        <td>2012-07-14</td>
                        <td>Release: com.io7m.jtensors 2.1.0</td>
                    </tr>
                    <tr>
                        <td>2012-07-14</td>
                        <td>Change: Produce documentation with Maven</td>
                    </tr>
                    <tr>
                        <td>2012-07-14</td>
                        <td>Change: Make dependencies more honest: The package only depends on jsr305, not all of findbugs</td>
                    </tr>
                    <tr>
                        <td>2012-06-19</td>
                        <td>Release: com.io7m.jtensors 2.0.0</td>
                    </tr>
                    <tr>
                        <td>2012-06-19</td>
                        <td>Change: Switch to maven for builds</td>
                    </tr>
                    <tr>
                        <td>2012-05-12</td>
                        <td>Change: ApproximatelyEqual* moved to io7m-jaux</td>
                    </tr>
                    <tr>
                        <td>2012-05-05</td>
                        <td>Change: VectorI*.zero renamed to ZERO and implemented by all vector types</td>
                    </tr>
                    <tr>
                        <td>2012-05-05</td>
                        <td>Change: MatrixM4x4D.multiply -&gt; MatrixM4x4D.multiplyVector4DWithContext</td>
                    </tr>
                    <tr>
                        <td>2012-05-05</td>
                        <td>Change: MatrixM4x4D.multiply -&gt; MatrixM4x4D.multiplyVector4D</td>
                    </tr>
                    <tr>
                        <td>2012-05-05</td>
                        <td>Change: Increase test coverage for integer vectors</td>
                    </tr>
                    <tr>
                        <td>2012-05-05</td>
                        <td>Change: Add Matrix3x3* makeTranslation functions</td>
                    </tr>
                    <tr>
                        <td>2012-04-20</td>
                        <td>Change: Add integer vector methods for Matrix4x4*</td>
                    </tr>
                    <tr>
                        <td>2012-04-20</td>
                        <td>Change: Rename methods to indicate the type of vectors used, removing ambiguity. All VectorReadable* interfaces are affected, as well as Matrix* methods that previously specified a type name.</td>
                    </tr>
                    <tr>
                        <td>2012-03-15</td>
                        <td>Release: com.io7m.jtensors 1.0.1</td>
                    </tr>
                    <tr>
                        <td>2012-03-15</td>
                        <td>Change: Correct build.xml to produce a jar file with the right version</td>
                    </tr>
                    <tr>
                        <td>2012-03-15</td>
                        <td>Release: com.io7m.jtensors 1.0.0</td>
                    </tr>
                    <tr>
                        <td>2012-03-06</td>
                        <td>Change: Depend on jexternals for eclipse users</td>
                    </tr>
                    <tr>
                        <td>2012-02-11</td>
                        <td>Change: MatrixM3x3F allocated too many bytes (wasted memory)</td>
                    </tr>
                    <tr>
                        <td>2012-02-08</td>
                        <td>Change: Add SunOS supported</td>
                    </tr>
                    <tr>
                        <td>2012-02-06</td>
                        <td>Release: com.io7m.jtensors 0.2.0</td>
                    </tr>
                    <tr>
                        <td>2012-02-06</td>
                        <td>Change: Initial version</td>
                    </tr>
                </table>
            </div>
            <div id="Sources">
                <h2>Sources</h2>
                <p>This project uses <a href="http://www.git-scm.com">Git</a> to manage source code.</p>
                <p>Repository: <a href="https://github.com/io7m/jtensors">https://github.com/io7m/jtensors</a>
                </p>
                <pre>$ git clone https://github.com/io7m/jtensors</pre>
            </div>
            <div id="license">
                <h2>License</h2>
                <pre>Copyright ⓒ 2017 Mark Raynsford &lt;code@io7m.com&gt; http://io7m.com

Permission to use, copy, modify, and/or distribute this software for
any purpose with or without fee is hereby granted, provided that the
above copyright notice and this permission notice appear in all copies.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL
WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED
WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR
BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES
OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS,
WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION,
ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
SOFTWARE.
</pre>
            </div>
            <div id="bug-tracker">
                <h2>Bug Tracker</h2>
                <p>The project uses <a href="http://github.com/io7m/jtensors/issues">GitHub Issues</a> to track issues.</p>
            </div>
        </div>
    </body>
</html>
