<?xml version="1.0" encoding="UTF-8"?>
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.io7m.jtensors</groupId>
    <artifactId>com.io7m.jtensors</artifactId>
    <version>8.2.0</version>
  </parent>

  <artifactId>com.io7m.jtensors.tests</artifactId>
  <packaging>jar</packaging>

  <name>com.io7m.jtensors.tests</name>
  <description>Vector/matrix math package (Test suite)</description>
  <url>http://io7m.github.io/jtensors/</url>

  <properties>
    <mdep.analyze.skip>true</mdep.analyze.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.core</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.orthonormalization</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.generators</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.storage.api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.storage.bytebuffered</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>${project.groupId}</groupId>
      <artifactId>com.io7m.jtensors.storage.heap</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.io7m.mutable.numbers</groupId>
      <artifactId>com.io7m.mutable.numbers.core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.junreachable</groupId>
      <artifactId>com.io7m.junreachable.core</artifactId>
    </dependency>
    <dependency>
      <groupId>com.io7m.jequality</groupId>
      <artifactId>com.io7m.jequality.core</artifactId>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
    <dependency>
      <groupId>net.java.quickcheck</groupId>
      <artifactId>quickcheck</artifactId>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Generate sources -->
      <plugin>
        <groupId>com.webguys</groupId>
        <artifactId>string-template-maven-plugin</artifactId>
        <executions>

          <!-- Parameterized vector types -->
          <!-- Double -->
          <execution>
            <id>generate-P4D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4DTest.java</target>
                  <properties>
                    <className>PVectors4DTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4D</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorConversionType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4DType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3DType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3DTest.java</target>
                  <properties>
                    <className>PVectors3DTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3D</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorConversionType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3DType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2DTest.java</target>
                  <properties>
                    <className>PVectors2DTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2D</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorConversionType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Float -->
          <execution>
            <id>generate-P4F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4FTest.java</target>
                  <properties>
                    <className>PVectors4FTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4F</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorConversionType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4FType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3FType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3FTest.java</target>
                  <properties>
                    <className>PVectors3FTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3F</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorConversionType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3FType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2FTest.java</target>
                  <properties>
                    <className>PVectors2FTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2F</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorConversionType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Long -->
          <execution>
            <id>generate-P4L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4LTest.java</target>
                  <properties>
                    <className>PVectors4LTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4L</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4L</vectorConversionType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4LType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3LType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3LTest.java</target>
                  <properties>
                    <className>PVectors3LTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3L</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3L</vectorConversionType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3LType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2LTest.java</target>
                  <properties>
                    <className>PVectors2LTest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2L</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2L</vectorConversionType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Int -->
          <execution>
            <id>generate-P4I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors4ITest.java</target>
                  <properties>
                    <className>PVectors4ITest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector4I</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector4I</vectorConversionType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable4IType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3IType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector4IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors4I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P3I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors3ITest.java</target>
                  <properties>
                    <className>PVectors3ITest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector3I</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector3I</vectorConversionType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable3IType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector3IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors3I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-P2I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/vectors/PVectors2ITest.java</target>
                  <properties>
                    <className>PVectors2ITest</className>
                    <vectorType>com.io7m.jtensors.core.parameterized.vectors.PVector2I</vectorType>
                    <vectorConversionType>com.io7m.jtensors.core.unparameterized.vectors.Vector2I</vectorConversionType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.parameterized.vectors.PVectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.PVector2IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.parameterized.vectors.PVectors2I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Unparameterized vector types -->
          <!-- Double -->
          <execution>
            <id>generate-4D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors4DTest.java</target>
                  <properties>
                    <className>Vectors4DTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable4DType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3DType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector4DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-3D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors3DTest.java</target>
                  <properties>
                    <className>Vectors3DTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3DType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector3DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-2D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors2DTest.java</target>
                  <properties>
                    <className>Vectors2DTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorType>
                    <vectorComponentType>double</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2DType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector2DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Float -->
          <execution>
            <id>generate-4F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors4FTest.java</target>
                  <properties>
                    <className>Vectors4FTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable4FType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3FType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector4FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-3F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors3FTest.java</target>
                  <properties>
                    <className>Vectors3FTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3FType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector3FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-2F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors2FTest.java</target>
                  <properties>
                    <className>Vectors2FTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorType>
                    <vectorComponentType>float</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2FType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector2FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <hasFloatingPoint>true</hasFloatingPoint>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Long -->
          <execution>
            <id>generate-4L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors4LTest.java</target>
                  <properties>
                    <className>Vectors4LTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector4L</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable4LType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3LType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector4LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-3L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors3LTest.java</target>
                  <properties>
                    <className>Vectors3LTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector3L</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3LType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector3LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-2L</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors2LTest.java</target>
                  <properties>
                    <className>Vectors2LTest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector2L</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2LType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector2LGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2L</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestLOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Int -->
          <execution>
            <id>generate-4I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors4ITest.java</target>
                  <properties>
                    <className>Vectors4ITest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector4I</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable4Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable4IType</vectorReadable4Type>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3IType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector4IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-3I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors3ITest.java</target>
                  <properties>
                    <className>Vectors3ITest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector3I</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable3Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable3IType</vectorReadable3Type>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector3IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-2I</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PVector2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/vectors/Vectors2ITest.java</target>
                  <properties>
                    <className>Vectors2ITest</className>
                    <vectorType>com.io7m.jtensors.core.unparameterized.vectors.Vector2I</vectorType>
                    <vectorComponentType>long</vectorComponentType>
                    <scalarRealType>double</scalarRealType>
                    <vectorReadable2Type>com.io7m.jtensors.core.unparameterized.vectors.VectorReadable2IType</vectorReadable2Type>
                    <generatorType>com.io7m.jtensors.generators.Vector2IGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2I</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestIOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Parameterized matrix types -->
          <execution>
            <id>generate-PM4x4D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix4x4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/matrices/PMatrix4x4DTest.java</target>
                  <properties>
                    <className>PMatrix4x4DTest</className>
                    <matrixType>com.io7m.jtensors.core.parameterized.matrices.PMatrix4x4D</matrixType>
                    <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4D</matrixConversionType>
                    <matrixComponentType>double</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.PMatrix4x4DGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector4D</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector4DGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector4DGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices4x4D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4D</vectorOpClass>
                    <hasGeneric>true</hasGeneric>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-PM3x3D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix3x3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/matrices/PMatrix3x3DTest.java</target>
                  <properties>
                    <className>PMatrix3x3DTest</className>
                    <matrixType>com.io7m.jtensors.core.parameterized.matrices.PMatrix3x3D</matrixType>
                    <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix3x3D</matrixConversionType>
                    <matrixComponentType>double</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.PMatrix3x3DGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector3D</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector3DGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector3DGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices3x3D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3D</vectorOpClass>
                    <hasGeneric>true</hasGeneric>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-PM2x2D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix2x2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/matrices/PMatrix2x2DTest.java</target>
                  <properties>
                    <className>PMatrix2x2DTest</className>
                    <matrixType>com.io7m.jtensors.core.parameterized.matrices.PMatrix2x2D</matrixType>
                    <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix2x2D</matrixConversionType>
                    <matrixComponentType>double</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.PMatrix2x2DGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector2D</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector2DGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector2DGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices2x2D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2D</vectorOpClass>
                    <hasGeneric>true</hasGeneric>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-PM4x4F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix4x4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/matrices/PMatrix4x4FTest.java</target>
                  <properties>
                    <className>PMatrix4x4FTest</className>
                    <matrixType>com.io7m.jtensors.core.parameterized.matrices.PMatrix4x4F</matrixType>
                    <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4F</matrixConversionType>
                    <matrixComponentType>float</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.PMatrix4x4FGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector4F</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector4FGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector4FGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices4x4F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4F</vectorOpClass>
                    <hasGeneric>true</hasGeneric>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-PM3x3F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix3x3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/matrices/PMatrix3x3FTest.java</target>
                  <properties>
                    <className>PMatrix3x3FTest</className>
                    <matrixType>com.io7m.jtensors.core.parameterized.matrices.PMatrix3x3F</matrixType>
                    <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix3x3F</matrixConversionType>
                    <matrixComponentType>float</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.PMatrix3x3FGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector3F</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector3FGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector3FGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices3x3F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3F</vectorOpClass>
                    <hasGeneric>true</hasGeneric>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-PM2x2F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix2x2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/parameterized/matrices/PMatrix2x2FTest.java</target>
                  <properties>
                    <className>PMatrix2x2FTest</className>
                    <matrixType>com.io7m.jtensors.core.parameterized.matrices.PMatrix2x2F</matrixType>
                    <matrixConversionType>com.io7m.jtensors.core.unparameterized.matrices.Matrix2x2F</matrixConversionType>
                    <matrixComponentType>float</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.PMatrix2x2FGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.parameterized.vectors.PVector2F</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector2FGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector2FGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices2x2F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2F</vectorOpClass>
                    <hasGeneric>true</hasGeneric>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Unparameterized matrix types -->
          <execution>
            <id>generate-M4x4D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix4x4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/matrices/Matrix4x4DTest.java</target>
                  <properties>
                    <className>Matrix4x4DTest</className>
                    <matrixType>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4D</matrixType>
                    <matrixComponentType>double</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Matrix4x4DGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector4D</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector4DGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector4DGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices4x4D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4D</vectorOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-M3x3D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix3x3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/matrices/Matrix3x3DTest.java</target>
                  <properties>
                    <className>Matrix3x3DTest</className>
                    <matrixType>com.io7m.jtensors.core.unparameterized.matrices.Matrix3x3D</matrixType>
                    <matrixComponentType>double</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Matrix3x3DGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector3DGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector3DGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices3x3D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3D</vectorOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-M2x2D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix2x2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/matrices/Matrix2x2DTest.java</target>
                  <properties>
                    <className>Matrix2x2DTest</className>
                    <matrixType>com.io7m.jtensors.core.unparameterized.matrices.Matrix2x2D</matrixType>
                    <matrixComponentType>double</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Matrix2x2DGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector2D</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector2DGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector2DGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices2x2D</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2D</vectorOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-M4x4F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix4x4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/matrices/Matrix4x4FTest.java</target>
                  <properties>
                    <className>Matrix4x4FTest</className>
                    <matrixType>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4F</matrixType>
                    <matrixComponentType>float</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Matrix4x4FGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector4F</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector4FGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector4FGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices4x4F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors4F</vectorOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-M3x3F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix3x3Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/matrices/Matrix3x3FTest.java</target>
                  <properties>
                    <className>Matrix3x3FTest</className>
                    <matrixType>com.io7m.jtensors.core.unparameterized.matrices.Matrix3x3F</matrixType>
                    <matrixComponentType>float</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Matrix3x3FGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector3FGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector3FGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices3x3F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3F</vectorOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-M2x2F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>PMatrix2x2Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/unparameterized/matrices/Matrix2x2FTest.java</target>
                  <properties>
                    <className>Matrix2x2FTest</className>
                    <matrixType>com.io7m.jtensors.core.unparameterized.matrices.Matrix2x2F</matrixType>
                    <matrixComponentType>float</matrixComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Matrix2x2FGenerator</generatorType>
                    <vectorRowType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorRowType>
                    <vectorColumnType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorColumnType>
                    <vectorColumnGenericType>com.io7m.jtensors.core.unparameterized.vectors.Vector2F</vectorColumnGenericType>
                    <vectorGeneratorType>com.io7m.jtensors.generators.Vector2FGenerator</vectorGeneratorType>
                    <vectorGenericGeneratorType>com.io7m.jtensors.generators.PVector2FGenerator</vectorGenericGeneratorType>
                    <opClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices2x2F</opClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                    <vectorOpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors2F</vectorOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>

          <!-- Quaternion types -->
          <execution>
            <id>generate-Q4D</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>Quaternion4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/quaternions/Quaternions4DTest.java</target>
                  <properties>
                    <className>Quaternions4DTest</className>
                    <quaternionType>com.io7m.jtensors.core.quaternions.Quaternion4D</quaternionType>
                    <quaternionComponentType>double</quaternionComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Quaternion4DGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.quaternions.Quaternions4D</opClass>
                    <matrix4x4Type>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4D</matrix4x4Type>
                    <matrix4x4OpClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices4x4D</matrix4x4OpClass>
                    <matrix4x4ParameterizedType>com.io7m.jtensors.core.parameterized.matrices.PMatrix4x4D</matrix4x4ParameterizedType>
                    <matrix4x4ParameterizedOpClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices4x4D</matrix4x4ParameterizedOpClass>
                    <matrix4x4GeneratorType>com.io7m.jtensors.generators.Matrix4x4DGenerator</matrix4x4GeneratorType>
                    <vector3Type>com.io7m.jtensors.core.unparameterized.vectors.Vector3D</vector3Type>
                    <vector3GeneratorType>com.io7m.jtensors.generators.Vector3DGenerator</vector3GeneratorType>
                    <vector3OpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3D</vector3OpClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestDOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
          <execution>
            <id>generate-Q4F</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>render</goal>
            </goals>
            <configuration>
              <templates>
                <template>
                  <directory>src/test/string-template</directory>
                  <name>Quaternion4Test</name>
                  <target>${project.build.directory}/generated-test-sources/string-template/com/io7m/jtensors/tests/core/quaternions/Quaternions4FTest.java</target>
                  <properties>
                    <className>Quaternions4FTest</className>
                    <quaternionType>com.io7m.jtensors.core.quaternions.Quaternion4F</quaternionType>
                    <quaternionComponentType>float</quaternionComponentType>
                    <scalarRealType>double</scalarRealType>
                    <generatorType>com.io7m.jtensors.generators.Quaternion4FGenerator</generatorType>
                    <opClass>com.io7m.jtensors.core.quaternions.Quaternions4F</opClass>
                    <matrix4x4Type>com.io7m.jtensors.core.unparameterized.matrices.Matrix4x4F</matrix4x4Type>
                    <matrix4x4OpClass>com.io7m.jtensors.core.unparameterized.matrices.Matrices4x4F</matrix4x4OpClass>
                    <matrix4x4ParameterizedType>com.io7m.jtensors.core.parameterized.matrices.PMatrix4x4F</matrix4x4ParameterizedType>
                    <matrix4x4ParameterizedOpClass>com.io7m.jtensors.core.parameterized.matrices.PMatrices4x4F</matrix4x4ParameterizedOpClass>
                    <matrix4x4GeneratorType>com.io7m.jtensors.generators.Matrix4x4FGenerator</matrix4x4GeneratorType>
                    <vector3Type>com.io7m.jtensors.core.unparameterized.vectors.Vector3F</vector3Type>
                    <vector3GeneratorType>com.io7m.jtensors.generators.Vector3FGenerator</vector3GeneratorType>
                    <vector3OpClass>com.io7m.jtensors.core.unparameterized.vectors.Vectors3F</vector3OpClass>
                    <testOpClass>com.io7m.jtensors.tests.core.TestFOps</testOpClass>
                  </properties>
                </template>
              </templates>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Check style -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
      </plugin>

      <!-- Add generated test sources to compilation -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>add-source</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-test-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-test-sources/string-template</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Determine test coverage -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
      </plugin>
    </plugins>
  </build>

</project>
